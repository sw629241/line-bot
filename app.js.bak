import express from 'express';
import path from 'path';
import { fileURLToPath } from 'url';
import { dirname } from 'path';
import bodyParser from 'body-parser';
import cors from 'cors';
import { loadConfig } from './backend/config.js';
import { handleWebhook, handleTestMessage } from './backend/line.js';
import { logger } from './backend/utils.js';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const config = loadConfig();
const app = express();

// 設置信任代理
app.set('trust proxy', true);

// 靜態文件中間件
app.use('/', express.static(path.join(__dirname, 'frontend'), {
    index: false,
    extensions: ['html', 'htm']
}));

// 設置基本中間件
app.use(cors());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// 主頁路由 - 處理根路徑和任何以 html 結尾的請求
app.get(['/', '/*.html'], (req, res) => {
    logger.info('Serving index.html for path:', req.path);
    res.sendFile(path.join(__dirname, 'frontend', 'index.html'));
});

// 請求日誌中間件
app.use((req, res, next) => {
    logger.info('Incoming request:', {
        method: req.method,
        url: req.url,
        originalUrl: req.originalUrl,
        baseUrl: req.baseUrl,
        path: req.path,
        headers: req.headers,
        protocol: req.protocol,
        hostname: req.hostname,
        ip: req.ip,
        xhr: req.xhr,
        'x-forwarded-for': req.get('x-forwarded-for'),
        'x-forwarded-proto': req.get('x-forwarded-proto'),
        'x-original-uri': req.get('x-original-uri')
    });
    next();
});

// 健康檢查路由
app.get('/health', (req, res) => {
    return res.json({
        status: "OK",
        version: {
            major: 2,
            minor: 12,
            revision: 1
        }
    });
});

// LINE Webhook 路由
app.post('/webhook/:botType', (req, res) => {
    const botType = req.params.botType;
    const client = config.line;
    
    if (!client) {
        logger.error(`Invalid bot type: ${botType}`);
        return res.status(400).json({ error: 'Invalid bot type' });
    }
    
    handleWebhook(req, res, botType, client);
});

// 測試訊息路由
app.post('/test-message', handleTestMessage);

// 處理所有其他路由 - 返回主頁
app.use((req, res) => {
    logger.info('Fallback: Serving index.html for path:', req.path);
    res.sendFile(path.join(__dirname, 'frontend', 'index.html'));
});

// 錯誤處理中間件
app.use((err, req, res, next) => {
    logger.error('Error:', err);
    res.status(500).json({ error: 'Internal server error' });
});

// 啟動服務器
const PORT = process.env.PORT || 3000;
const HOST = process.env.HOST || '0.0.0.0';

app.listen(PORT, HOST, () => {
    logger.info(`Server is running on ${HOST}:${PORT}`);
    logger.info(`Server root directory: ${__dirname}`);
});
